rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /lessons/{lessonId} {
      allow read: if request.auth.uid != null;
      allow create: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.verified == true;
      allow write: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.verified == true;
      allow update: if request.auth.uid != request.resource.data.createrId;
      allow delete: if request.auth.uid != request.resource.data.createrId;
    }
    match /users/{uid} {
      allow read: if request.auth.uid != null;
      allow create: if true;
      allow write: if true;
      allow update: if request.auth.uid != request.resource.data.uid;
      allow delete: if true;
    }
    match /reports/{reportId} {
      allow read: if true;
      allow create: if true;
      allow write: if true;
      allow update: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.verified == true;
      allow delete: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.verified == true;
    }
    match /verificationRequests/{verificationRequestId} {
      allow read: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.verified == true;
      allow create: if true;
      allow write: if true;
      allow update: if true;
      allow delete: if get(/databases/$(database)/documents/users/$(request.auth.uid)).data.verified == true;
    }
    match /password/{id} {
      allow read: if true;
      allow create, write, update, delete: if false;
    }
    match /{document=**} {
      allow read, create, write, update, delete: if true;
    }
  }
}
