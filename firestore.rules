rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function isVerified() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isTeacher == true || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isDeveloper == true || get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdministrator == true;
    }

    function auth() {
      return request.auth.uid != null
    }

    match /lessons/{lessonId} {
      allow read: if auth();
      allow create: if isVerified();
      allow update: if request.auth.uid == request.resource.data.createrId;
      allow delete: if request.auth.uid == request.resource.data.createrId;
    }
    match /users/{uid} {
      allow read: if request.auth.uid != null;
      allow create: if true;
      allow update: if request.auth.uid == request.resource.data.uid;
      allow delete: if request.auth.uid == request.resource.data.uid;
      match /list/{lessonId} {
        allow read: if true;
        allow create: if true;
        allow update: if true;
        allow delete: if true;
      }
    }
    match /reports/{reportId} {
      allow read: if isVerified();
      allow create: if true;
      allow update: if isVerified();
      allow delete: if isVerified();
    }
    match /verificationRequests/{verificationRequestId} {
      allow read: if true;
      allow create: if true;
      allow update: if true;
      allow delete: if isVerified();
    }
    match /password/{id} {
      allow read: if true;
      allow create, write, update, delete: if false;
    }
    match /subjects/{id} {
      allow read: if true;
      allow create, write, update, delete: if true;
    }
  }
}
